pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: build
    image: ubuntu:22.04
    command:
    - cat
    tty: true
    volumeMounts:
      - name: docker-sock
        mountPath: /var/run/docker.sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
            defaultContainer 'build'
        }
    }

    environment {
        AWS_REGION  = 'ap-northeast-2'
        ECR_REPO    = credentials('forever-be-dev-ecr-uri')
        BRANCH_NAME = "${env.GIT_BRANCH}".replaceAll('/', '-')
    }

    stages {
        stage('Install Tools') {
            steps {
                sh '''
                    apt-get update
                    apt-get install -y docker.io awscli git unzip lsb-release ca-certificates gnupg
                    docker --version
                    aws --version
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set Build Vars') {
            steps {
                script {
                    COMMIT_HASH = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    BUILD_TAG   = "${env.BRANCH_NAME}-${env.BUILD_NUMBER}-${COMMIT_HASH}"
                    env.COMMIT_HASH = COMMIT_HASH
                    env.BUILD_TAG = BUILD_TAG
                }
            }
        }

        stage('Login to ECR') {
            steps {
                sh """
                    aws ecr get-login-password --region $AWS_REGION | \
                    docker login --username AWS --password-stdin $ECR_REPO
                """
            }
        }

        stage('Gradle Build') {
            steps {
                sh './gradlew clean'
                sh './gradlew test'
                sh './gradlew build --no-daemon'
            }
        }

        stage('Docker Build & Push') {
            steps {
                sh """
                    docker build -t $ECR_REPO:${BUILD_TAG} .
                    docker tag $ECR_REPO:${BUILD_TAG} $ECR_REPO:latest
                    docker push $ECR_REPO:${BUILD_TAG}
                    docker push $ECR_REPO:latest
                """
            }
        }
    }
}
