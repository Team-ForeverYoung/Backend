pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
spec:
  securityContext:
    runAsUser: 0
  containers:
    - name: build
      image: ubuntu:22.04
      command:
        - cat
      tty: true
      securityContext:
        runAsUser: 0
      env:
        - name: DOCKER_CONFIG
          value: /root/.docker
  # (docker.sock 마운트는 필요 없음!)
"""
            defaultContainer 'build'
        }
    }

    environment {
        AWS_REGION  = 'ap-northeast-2'
        ECR_REPO    = credentials('forever-be-dev-ecr-uri')
        BRANCH_NAME = "${env.GIT_BRANCH}".replaceAll('/', '-')
        JAVA_HOME   = '/usr/lib/jvm/java-17-openjdk-amd64'
        PATH        = "${JAVA_HOME}/bin:${env.PATH}"
    }

    stages {

        stage('Install Dependencies') {
            steps {
                sh '''
                    apt-get update
                    apt-get install -y unzip curl sudo lsb-release ca-certificates gnupg git openjdk-17-jdk

                    # Docker 설치 (buildx는 Docker 20.10 이상 필요)
                    curl -fsSL https://get.docker.com | sh

                    # buildx 설치
                    mkdir -p ~/.docker/cli-plugins/
                    curl -SL https://github.com/docker/buildx/releases/download/v0.14.0/buildx-v0.14.0.linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
                    chmod +x ~/.docker/cli-plugins/docker-buildx
                    docker buildx version

                    # AWS CLI v2 설치
                    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
                    unzip awscliv2.zip
                    ./aws/install

                    # ECR 로그인
                    aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Set Build Vars') {
            steps {
                script {
                    COMMIT_HASH = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
                    BUILD_TAG   = "${env.BRANCH_NAME}-${env.BUILD_NUMBER}-${COMMIT_HASH}"
                    env.COMMIT_HASH = COMMIT_HASH
                    env.BUILD_TAG = BUILD_TAG
                }
            }
        }

        stage('Docker Buildx Build & Push') {
            steps {
                sh '''
                    # buildx 빌더 생성 (컨테이너 기반 빌더)
                    docker buildx create --use --name jenkins-builder
                    docker buildx inspect --bootstrap

                    # 빌드 & 푸시
                    docker buildx build --platform linux/amd64,linux/arm64 \
                        --push \
                        -t $ECR_REPO:${BUILD_TAG} \
                        -t $ECR_REPO:latest \
                        .
                '''
            }
        }
    }
}
